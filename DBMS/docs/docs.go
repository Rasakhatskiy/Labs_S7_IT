// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/databases": {
            "get": {
                "description": "Get databases list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Get databases list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/databases/new_database": {
            "post": {
                "description": "Create database with given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Create a database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/databases/{name}": {
            "get": {
                "description": "Get tables list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Get tables list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Delete database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/databases/{name}/joined_tables": {
            "get": {
                "description": "Get table result of inner join two tables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Get joined table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "First table",
                        "name": "t1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Second table",
                        "name": "t2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Column from first table",
                        "name": "c1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Column from second table",
                        "name": "c2",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                }
            }
        },
        "/databases/{name}/new_table": {
            "post": {
                "description": "Create new table by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Create new table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "description": "table values",
                        "name": "table",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                }
            }
        },
        "/databases/{name}/{table}": {
            "get": {
                "description": "get table by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Get a table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "table",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Delete table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "table",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/databases/{name}/{table}/new_row": {
            "post": {
                "description": "Add new row",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Add new row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "table",
                        "in": "path"
                    },
                    {
                        "description": "Row to add",
                        "name": "row",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                }
            }
        },
        "/databases/{name}/{table}/{id}": {
            "put": {
                "description": "Delete a row",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Delete a row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "table",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "row id",
                        "name": "rowID",
                        "in": "path"
                    },
                    {
                        "description": "Row to add",
                        "name": "row",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a row",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "table"
                ],
                "summary": "Delete a row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database name",
                        "name": "name",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Table name",
                        "name": "table",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "row id",
                        "name": "rowID",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.TableJSONValues"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.TableHeaderJSON": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "database.TableJSONValues": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.TableHeaderJSON"
                    }
                },
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {}
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
