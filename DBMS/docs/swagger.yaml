definitions:
  database.TableHeaderJSON:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  database.TableJSONValues:
    properties:
      headers:
        items:
          $ref: '#/definitions/database.TableHeaderJSON'
        type: array
      name:
        type: string
      values:
        items:
          items: {}
          type: array
        type: array
    type: object
info:
  contact: {}
paths:
  /databases:
    get:
      consumes:
      - application/json
      description: Get databases list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get databases list
      tags:
      - database
  /databases/{name}:
    delete:
      consumes:
      - application/json
      description: Delete database
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete database
      tags:
      - database
    get:
      consumes:
      - application/json
      description: Get tables list
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get tables list
      tags:
      - database
  /databases/{name}/{table}:
    delete:
      consumes:
      - application/json
      description: Delete table
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      - description: Table name
        in: path
        name: table
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete table
      tags:
      - table
    get:
      consumes:
      - application/json
      description: get table by name
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      - description: Table name
        in: path
        name: table
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TableJSONValues'
      summary: Get a table
      tags:
      - table
  /databases/{name}/{table}/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a row
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      - description: Table name
        in: path
        name: table
        type: string
      - description: row id
        in: path
        name: rowID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TableJSONValues'
      summary: Delete a row
      tags:
      - table
    put:
      consumes:
      - application/json
      description: Delete a row
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      - description: Table name
        in: path
        name: table
        type: string
      - description: row id
        in: path
        name: rowID
        type: integer
      - description: Row to add
        in: body
        name: row
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TableJSONValues'
      summary: Delete a row
      tags:
      - table
  /databases/{name}/{table}/new_row:
    post:
      consumes:
      - application/json
      description: Add new row
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      - description: Table name
        in: path
        name: table
        type: string
      - description: Row to add
        in: body
        name: row
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TableJSONValues'
      summary: Add new row
      tags:
      - table
  /databases/{name}/joined_tables:
    get:
      consumes:
      - application/json
      description: Get table result of inner join two tables
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      - description: First table
        in: query
        name: t1
        type: string
      - description: Second table
        in: query
        name: t2
        type: string
      - description: Column from first table
        in: query
        name: c1
        type: string
      - description: Column from second table
        in: query
        name: c2
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TableJSONValues'
      summary: Get joined table
      tags:
      - table
  /databases/{name}/new_table:
    post:
      consumes:
      - application/json
      description: Create new table by name
      parameters:
      - description: Table name
        in: path
        name: name
        type: string
      - description: table values
        in: body
        name: table
        schema:
          $ref: '#/definitions/database.TableJSONValues'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.TableJSONValues'
      summary: Create new table
      tags:
      - table
  /databases/new_database:
    post:
      consumes:
      - application/json
      description: Create database with given name
      parameters:
      - description: Database name
        in: path
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create a database
      tags:
      - database
swagger: "2.0"
